#--------------------------------------------
# Exercise 4.2: CREATE ROLES, ENVIRONMENT, AND RUN CLIENT
# Reference: A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function.
#--------------------------------------------

ROLE: Example, configure a web server and mysql server. Each one would be it's own role. Assign both roles to one node.
ENVIRONMENT: A designation indicative of the processing stage (developmen, testing, staging, production, etc...). An environment is often indicative of the confiuguration and scale.

# TODO 1: SET EDITOR (MAYBE CAN SKIP)
#---------------------------------------

## action 1: Reconfigure server for local operations
####################################

cat << EOF >> ~/.bashrc
export EDITOR=$(which vi)
EOF

. ~/.bashrc

# TODO 2: CREATE ROLE
#---------------------------------------

## action 2: Create and add the content role
####################################

knife role create web_server

## action 3: Copy content into opened vim role
####################################

{
  "name": "web_server",
  "description": "A role to configure our front-line web servers",
  "json_class": "Chef::Role",
  "default_attributes": {

  },
  "override_attributes": {

  },
  "chef_type": "role",
  "run_list": [
        "recipe[apt]", "recipe[httpd]"

  ],
  "env_run_lists": {
        "production": [
           "recipe[httpd::config_prod]"
         ],
         "testing": [
           "recipe[httpd::config_test]"
         ]
  }
}

# TODO 3: CONFIGURE NODE
#---------------------------------------

## action 4: Delete run list by editing file
####################################

knife node run_list remove $(hostname -f) 'recipe[httpd]'


## action 5: Assign node web_server role
####################################

knife node run_list add $(hostname -f) 'role[web_server]'

# TODO 3: EXECUTE CONFIGURATION CHANGE
#---------------------------------------

## action 6: Execute configuration
####################################

sudo chef-client

# ToDo 5: Create and edit environment file
#---------------------------------------

## action 7: Create development environment
####################################

knife environment create development

## action 8: Copy content into opened vim environment
####################################

{
  "name": "development",
  "description": "",
  "cookbook_versions": {
    "httpd": "<= 1.1.0",
    "apt": "= 0.0.1"
  },
  "json_class": "Chef::Environment",
  "chef_type": "environment",
  "default_attributes": {

  },
  "override_attributes": {

  }
}

# ToDo 6: Answer the question, "what can you do with the Environment?" and try it
Try other commands:
knife environment list -w
knife environment list
knife node environment_set $(hostname -f) development
cd ~/.chef/cookbooks/httpd && chef generate recipe prod-config # Enter the httpd and generate the recipe

# ToDo 7: CLIENT DAEMON MODE
#---------------------------------------
## action 6: Start client daemon mode
####################################
sudo chef-client -i 1800   # Runs every 1800 seconds
